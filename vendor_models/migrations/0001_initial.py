# Generated by Django 5.0.6 on 2024-06-02 09:19

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255, verbose_name='Product Name')),
                ('available_quantity', models.IntegerField(verbose_name='Available Quantity')),
            ],
        ),
        migrations.CreateModel(
            name='VendorBaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created Date')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated Date')),
                ('user_type', models.CharField(choices=[('Consumer', 'Consumer'), ('Vendor', 'Vendor')], default='Consumer', max_length=10, verbose_name='User Type')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email Address')),
                ('contact_details', models.TextField()),
                ('address', models.TextField(max_length=500, verbose_name='Address')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Super User')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consumer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_code', models.CharField(blank=True, max_length=50, unique=True)),
                ('on_time_delivery_rate', models.FloatField(blank=True, default=0.0)),
                ('quality_rating_avg', models.FloatField(blank=True, default=0.0)),
                ('average_response_time', models.FloatField(blank=True, default=0.0)),
                ('fulfillment_rate', models.FloatField(blank=True, default=0.0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_number', models.CharField(max_length=100, unique=True, verbose_name='PO Number')),
                ('order_date', models.DateTimeField(blank=True, null=True, verbose_name='Order Date')),
                ('delivery_date', models.DateTimeField(blank=True, null=True, verbose_name='Delivery Date')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('acknowledged', 'Acknowledged'), ('issued', 'Issued'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='Consumer', max_length=50, verbose_name='Status')),
                ('quality_rating', models.FloatField(blank=True, null=True, verbose_name='Quality Rating')),
                ('issue_date', models.DateTimeField(blank=True, null=True, verbose_name='Issue Date')),
                ('acknowledgment_date', models.DateTimeField(blank=True, null=True, verbose_name='Acknowledgment Date')),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders_consumer', to='vendor_models.consumer')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='vendor_models.product')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders_vendor', to='vendor_models.vendor')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='vendor_models.vendor'),
        ),
        migrations.CreateModel(
            name='HistoricalPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Date')),
                ('on_time_delivery_rate', models.FloatField(default=0.0, verbose_name='On Time Delivery Rate')),
                ('quality_rating_avg', models.FloatField(default=0.0, verbose_name='Quality Rating Average')),
                ('average_response_time', models.FloatField(default=0.0, verbose_name='Average Response Time')),
                ('fulfillment_rate', models.FloatField(default=0.0, verbose_name='Fulfillment Rate')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historical_performances', to='vendor_models.vendor')),
            ],
        ),
    ]
